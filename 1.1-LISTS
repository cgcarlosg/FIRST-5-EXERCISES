class Node
  attr_accessor :value, :next_node      
  def initialize(value, next_node = nil)  
    @value = value
    @next_node = next_node
  end
end

class LinkedList
  #setup head and tail
  def initialize
    @head = nil
    @tail = nil
  end  

  def add(number)    
    this_node = Node.new(number)
    if @head.nil?
      @head = this_node
    else
      current = @head
      until current.next_node.nil?
        current = current.next_node
      end    
      current.next_node = this_node    
    end    
  end

  def get(index)   
    current = @head    
    index.times do    
      current = current.next_node
    end    
    current.value    
  end    
end

list = LinkedList.new

list.add(3)
list.add(5)
puts list.get(1)
# => 5
